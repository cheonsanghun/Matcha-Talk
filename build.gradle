plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'net.datasa'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	jjwtVersion = '0.11.5'
	testcontainersVersion = '1.19.0'
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Security Messaging
	implementation 'org.springframework.security:spring-security-messaging'

	// JWT Libraries
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	// TODO: 추후 Redis 추가 가능 (세션 및 캠시 관리)
	// implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// TODO: Testcontainers 추가 고려 (통합 테스트용)
	// testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
	// testImplementation "org.testcontainers:mysql:${testcontainersVersion}"
	
	// TODO: API Documentation 추가 고려
	// implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
}

// Test Configuration
tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
	testLogging {
		events 'passed', 'skipped', 'failed'
		exceptionFormat 'full'
	}
	// TODO: 테스트 커버리지 최소 기준 설정
	// systemProperty 'spring.profiles.active', 'test'
}

// TODO: Code Coverage 설정 추가 고려
// apply plugin: 'jacoco'
// jacocoTestReport {
//     reports {
//         xml.required = true
//         html.required = true
//     }
// }

// TODO: Code Quality 체크 도구 추가 고려
// apply plugin: 'checkstyle'
// apply plugin: 'pmd'
// apply plugin: 'spotbugs'

// Jar Configuration
jar {
	archiveBaseName = 'matcha-talk'
	archiveVersion = version
	enabled = false
}

bootJar {
	archiveBaseName = 'matcha-talk'
	archiveVersion = version
	launchScript()
}

// Build Information
task printVersion {
	doLast {
		println "Building ${project.name} version ${project.version}"
	}
}

// Clean up build artifacts
clean {
	delete 'out'
	delete 'logs'
}

// TODO: Docker 이미지 빌드 설정 추가 고려
// docker {
//     name = "matcha-talk:${version}"
//     buildArgs = ['JAR_FILE': "build/libs/${bootJar.archiveFileName.get()}"]
// }

// TODO: 배포 설정 추가 고려
// task deployDev(type: Copy) {
//     from bootJar
//     into 'deploy/dev'
// }

// TODO: 환경별 설정 추가 고려
// processResources {
//     filesMatching('**/application*.properties') {
//         expand(project.properties)
//     }
// }
